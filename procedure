delimiter //
-- article --------
create procedure insertArticle(IDTableArticle int , IDTableUpdateTime int, IDTableMagazine int,
    IDTableCategory int, CountOfUpdate int, ArticleDate TIMESTAMP,	Title varchar(200) ,UrlPicture varchar(200),
	Url varchar(200),	ObjectID int ,	Description text ,	FbLike int,
	FbCmt int,	FbShare int,	ArticleLike int)
begin
insert into ARTICLE (IDTableArticle ,   IDTableUpdateTime ,  IDTableMagazine ,
    IDTableCategory ,CountOfUpdate,	ArticleDate ,	Title ,	UrlPicture ,Url ,	ObjectID ,	Description ,
	FbLike ,FbCmt ,FbShare ,ArticleLike ) values (IDTableArticle ,   IDTableUpdateTime ,  IDTableMagazine ,
    IDTableCategory ,CountOfUpdate,	ArticleDate ,	Title ,	UrlPicture ,Url ,	ObjectID ,	Description ,
	FbLike ,FbCmt ,FbShare ,ArticleLike );
end//

delimiter //
create procedure getMaxIDTableArticle (out maxIDTableArticle int)
begin
declare a int;
select max(IDTableArticle) into a from ARTICLE;
set maxIDTableArticle :=a ;
end//

create procedure updateArticle(IDTableArticle int, IDTableUpdateTime int, CountOfUpdate int, FbLike int, FbCmt int,
	FbShare int)
begin
update ARTICLE as a
set a.IDTableUpdateTime = IDTableUpdateTime, a.CountOfUpdate = CountOfUpdate, a.FbLike = FbLike,
	a.FbCmt = FbCmt, a.FbShare = FbShare
where a.IDTableArticle = IDTableArticle;
end//

delimiter //
create procedure getArticleToUpdate(IDTableUpdateTime int, IDTableMagazine int)
begin
select IDTableArticle, CountOfUpdate, Url
from ARTICLE as a
where a.IDTableUpdateTime = IDTableUpdateTime and a.IDTableMagazine = IDTableMagazine;
end//

-- parentcomenet

create procedure insertParentCmt (IDTableParentCmt int, IDTableArticle int, parentID int, CmtLike int, Content varchar(1000))
begin
insert into PARENTCMT (IDTableParentCmt, IDTableArticle, parentid, CmtLike, Content)values(IDTableParentCmt, IDTableArticle,
						parentID, CmtLike, Content);
end//
/* check if the parent comment has been existed */
create procedure isParentCmntExits(IDTableArticle int, ParentID int, out Result int)
begin 
if(exists(select * from PARENTCMT as p 	where p.IDTableArticle = IDTableArticle and p.ParentID = ParentID))
            then
	set Result = 1;
    else
    set Result = 0;
    end if;
end//

create procedure updateParentCmt (IDTableArticle int,  parentID int,  CmtLike int, Content varchar(1000))
begin
update PARENTCMT as p
set p.CmtLike = CmtLike, p.Content = Content
where p.IDTableArticle = IDTableArticle and p.Parentid = Parentid;
end//


create procedure getMaxIDTableParentCmt(out maxid int)
begin
declare a int;
select max(IDTableParentCmt) into a from PARENTCMT;
set maxid := a; 
end//


create procedure getIDTableParentCmtWithArgument(IDTableArticle int, ParentID int, out IDTableParentCmt int)
begin
declare a int;
select p.IDTableParentCmt into a from PARENTCMT as p
where p.IDTableArticle = IDTableArticle and p.ParentID = ParentID;
set IDTableParentCmt := a;
end//
-- SubComment

create procedure insertSubCmt(IDTableSubCmt int, IDTableParentCmt int,  ChildID int, CmtLike int, Content varchar(1000))
begin
insert into SUBCMT (IDTableSubCmt, IDTableParentCmt, ChildID, CmtLike, Content )
values (IDTableSubCmt, IDTableParentCmt ,	ChildID , CmtLike, Content);
end//

/* check if the sub comment has been existed */
create procedure isSubCmntExits(IDTableParentCmt int, ChildID int, out Result int)
begin 
if(exists(select * from SUBTCMT as s 	where s.IDTableParentCmt = IDTableParentCmnt and s.ChildID = ChildID))
            then
	set Result = 1;
    else
    set Result = 0;
    end if;
end//

create procedure updateSubCmt (IDTableParentCmt int, in ChildID int, in CmtLike int, Content varchar(1000))
begin
update SUBCMT as s
set s.CmtLike = CmtLike, s.Content = Content
where s.IDTableParentCmt = IDTableParentCmt and s.ChildID = ChildID; 
end//

create procedure getMaxIDTableSubCmt(out maxid int)
begin
declare a int;
select max(IDTableSubCmt) into a from SUBCMT;
set maxid := a; 
end//


delimiter ;
